{"version":3,"file":"static\\development\\pages\\index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/AddToCart.js","webpack:///./components/AddToPlayedIt.js","webpack:///./components/AddToReadIt.js","webpack:///./components/AddToSeenIt.js","webpack:///./components/AddToToPlay.js","webpack:///./components/AddToToRead.js","webpack:///./components/AddToToWatch.js","webpack:///./components/Book.js","webpack:///./components/Books.js","webpack:///./components/DeleteBook.js","webpack:///./components/DeleteButton.js","webpack:///./components/DeleteGame.js","webpack:///./components/DeleteItem.js","webpack:///./components/DeleteMovie.js","webpack:///./components/Game.js","webpack:///./components/Games.js","webpack:///./components/Item.js","webpack:///./components/Items.js","webpack:///./components/Movie.js","webpack:///./components/MovieCard.js","webpack:///./components/Movies.js","webpack:///./components/Pagination.js","webpack:///./components/PaginationBooks.js","webpack:///./components/PaginationGames.js","webpack:///./components/PaginationMovies.js","webpack:///./components/RemoveFromPlayedIt.js","webpack:///./components/RemoveFromReadIt.js","webpack:///./components/RemoveFromSeenIt.js","webpack:///./components/RemoveFromToPlay.js","webpack:///./components/RemoveFromToRead.js","webpack:///./components/RemoveFromToWatch.js","webpack:///./components/SearchBooks.js","webpack:///./components/SearchGames.js","webpack:///./components/SearchMovies.js","webpack:///./components/User.js","webpack:///./components/styles/DropDown.js","webpack:///./components/styles/ItemStyles.js","webpack:///./components/styles/PaginationStyles.js","webpack:///./components/styles/PriceTag.js","webpack:///./components/styles/Title.js","webpack:///./config.js","webpack:///./lib/formatMoney.js","webpack:///./pages/index.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"downshift\"","webpack:///external \"graphql-tag\"","webpack:///external \"lodash.debounce\"","webpack:///external \"next/head\"","webpack:///external \"next/link\"","webpack:///external \"next/router\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"react-icons/fa\"","webpack:///external \"react-icons/gi\"","webpack:///external \"react-icons/go\"","webpack:///external \"react-icons/io\"","webpack:///external \"react-icons/md\"","webpack:///external \"react-icons/ti\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","import React from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { CURRENT_USER_QUERY } from \"./User\";\n\nconst ADD_TO_CART_MUTATION = gql`\n  mutation addToCart($id: ID!) {\n    addToCart(id: $id) {\n      id\n      quantity\n    }\n  }\n`;\n\nclass AddToCart extends React.Component {\n  render() {\n    const { id } = this.props;\n    return (\n      <Mutation\n        mutation={ADD_TO_CART_MUTATION}\n        variables={{\n          id\n        }}\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n      >\n        {(addToCart, { error, loading }) => (\n          <button onClick={addToCart} disabled={loading}>\n            Add{loading && \"ing\"}{\" \"}\n            <svg\n              stroke=\"currentColor\"\n              fill=\"currentColor\"\n              stroke-width=\"0\"\n              viewBox=\"0 0 576 512\"\n              height=\"1em\"\n              width=\"1em\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path d=\"M402.3 344.9l32-32c5-5 13.7-1.5 13.7 5.7V464c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h273.5c7.1 0 10.7 8.6 5.7 13.7l-32 32c-1.5 1.5-3.5 2.3-5.7 2.3H48v352h352V350.5c0-2.1.8-4.1 2.3-5.6zm156.6-201.8L296.3 405.7l-90.4 10c-26.2 2.9-48.5-19.2-45.6-45.6l10-90.4L432.9 17.1c22.9-22.9 59.9-22.9 82.7 0l43.2 43.2c22.9 22.9 22.9 60 .1 82.8zM460.1 174L402 115.9 216.2 301.8l-7.3 65.3 65.3-7.3L460.1 174zm64.8-79.7l-43.2-43.2c-4.1-4.1-10.8-4.1-14.8 0L436 82l58.1 58.1 30.9-30.9c4-4.2 4-10.8-.1-14.9z\"></path>\n            </svg>\n          </button>\n        )}\n      </Mutation>\n    );\n  }\n}\nexport default AddToCart;\n","import React from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\n\r\nimport { FaGamepad } from \"react-icons/fa\";\r\n\r\nconst ADD_TO_PLAYED_IT_MUTATION = gql`\r\n  mutation addToPlayedIt($id: ID!) {\r\n    addToPlayedIt(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass AddToPlayedIt extends React.Component {\r\n  render() {\r\n    const { id } = this.props;\r\n    return (\r\n      <Mutation\r\n        mutation={ADD_TO_PLAYED_IT_MUTATION}\r\n        variables={{\r\n          id\r\n        }}\r\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n      >\r\n        {(addToPlayedIt, { error, loading }) => (\r\n          <button onClick={addToPlayedIt} disabled={loading}>\r\n            Played It <FaGamepad />\r\n          </button>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\nexport default AddToPlayedIt;\r\n","import React from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\n\r\nimport { GiWhiteBook } from \"react-icons/gi\";\r\n\r\nconst ADD_TO_READ_IT_MUTATION = gql`\r\n  mutation addToReadIt($id: ID!) {\r\n    addToReadIt(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass AddToReadIt extends React.Component {\r\n  render() {\r\n    const { id } = this.props;\r\n    return (\r\n      <Mutation\r\n        mutation={ADD_TO_READ_IT_MUTATION}\r\n        variables={{\r\n          id\r\n        }}\r\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n      >\r\n        {(addToReadIt, { error, loading }) => (\r\n          <button onClick={addToReadIt} disabled={loading}>\r\n            Read It <GiWhiteBook />\r\n          </button>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\nexport default AddToReadIt;\r\n","import React from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\n\r\nimport { MdLocalMovies } from \"react-icons/md\";\r\n\r\nconst ADD_TO_SEEN_IT_MUTATION = gql`\r\n  mutation addToSeenIt($id: ID!) {\r\n    addToSeenIt(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass AddToSeenIt extends React.Component {\r\n  render() {\r\n    const { id } = this.props;\r\n    return (\r\n      <Mutation\r\n        mutation={ADD_TO_SEEN_IT_MUTATION}\r\n        variables={{\r\n          id\r\n        }}\r\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n      >\r\n        {(addToSeenIt, { error, loading }) => (\r\n          <button onClick={addToSeenIt} disabled={loading}>\r\n            Seen It <MdLocalMovies />\r\n          </button>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\nexport default AddToSeenIt;\r\n","import React from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\nimport { FaGamepad } from \"react-icons/fa\";\r\n\r\nconst ADD_TO_TO_PLAY_MUTATION = gql`\r\n  mutation addToToPlay($id: ID!) {\r\n    addToToPlay(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass AddToToPlay extends React.Component {\r\n  render() {\r\n    const { id } = this.props;\r\n    return (\r\n      <Mutation\r\n        mutation={ADD_TO_TO_PLAY_MUTATION}\r\n        variables={{\r\n          id\r\n        }}\r\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n      >\r\n        {(addToToPlay, { error, loading }) => (\r\n          <button onClick={addToToPlay} disabled={loading}>\r\n            To Play\r\n            <FaGamepad />\r\n          </button>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\nexport default AddToToPlay;\r\n","import React from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\nimport { GiWhiteBook } from \"react-icons/gi\";\r\n\r\nconst ADD_TO_TO_READ_MUTATION = gql`\r\n  mutation addToToRead($id: ID!) {\r\n    addToToRead(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass AddToToRead extends React.Component {\r\n  render() {\r\n    const { id } = this.props;\r\n    return (\r\n      <Mutation\r\n        mutation={ADD_TO_TO_READ_MUTATION}\r\n        variables={{\r\n          id\r\n        }}\r\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n      >\r\n        {(addToToRead, { error, loading }) => (\r\n          <button onClick={addToToRead} disabled={loading}>\r\n            To Read <GiWhiteBook />\r\n          </button>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\nexport default AddToToRead;\r\n","import React from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\n\r\nimport { MdLocalMovies } from \"react-icons/md\";\r\n\r\nconst ADD_TO_TO_WATCH_MUTATION = gql`\r\n  mutation addToToWatch($id: ID!) {\r\n    addToToWatch(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass AddToToWatch extends React.Component {\r\n  render() {\r\n    const { id } = this.props;\r\n    return (\r\n      <Mutation\r\n        mutation={ADD_TO_TO_WATCH_MUTATION}\r\n        variables={{\r\n          id\r\n        }}\r\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n      >\r\n        {(addToToWatch, { error, loading }) => (\r\n          <button onClick={addToToWatch} disabled={loading}>\r\n            To Watch <MdLocalMovies />\r\n          </button>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\nexport default AddToToWatch;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Link from \"next/link\";\r\nimport Title from \"./styles/Title\";\r\n\r\nimport PriceTag from \"./styles/PriceTag\";\r\nimport formatMoney from \"../lib/formatMoney\";\r\nimport DeleteBook from \"./DeleteBook\";\r\nimport AddToCart from \"./AddToCart\";\r\nimport styled from \"styled-components\";\r\n\r\nimport AddToToRead from \"./AddToToRead\";\r\nimport RemoveFromToRead from \"./RemoveFromToRead\";\r\nimport AddToReadIt from \"./AddToReadIt\";\r\nimport RemoveFromReadIt from \"./RemoveFromReadIt\";\r\n\r\nconst BookStyles = styled.div`\r\n  background: white;\r\n  border: 1px solid ${props => props.theme.offWhite};\r\n  box-shadow: ${props => props.theme.bs};\r\n\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 307px;\r\n  width: 194px;\r\n  margin-bottom: 20px;\r\n  overflow: hidden;\r\n\r\n  button {\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 10px;\r\n    border: none;\r\n    background: none;\r\n    color: #fff;\r\n    font-size: 24px;\r\n  }\r\n  .toReadButton {\r\n    top: 20px;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 20px;\r\n  }\r\n  .readItButton {\r\n    top: 60px;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 20px;\r\n  }\r\n\r\n  img {\r\n    border-radius: 8px;\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n  p {\r\n    line-height: 2;\r\n    font-weight: 300;\r\n    flex-grow: 1;\r\n    padding: 0 3rem;\r\n    font-size: 1.5rem;\r\n  }\r\n  .buttonList {\r\n    display: grid;\r\n    width: 100%;\r\n    border-top: 1px solid ${props => props.theme.lightgrey};\r\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\r\n    grid-gap: 1px;\r\n    background: ${props => props.theme.lightgrey};\r\n    & > * {\r\n      background: white;\r\n      border: 0;\r\n      font-size: 1rem;\r\n      padding: 1rem;\r\n    }\r\n  }\r\n`;\r\nconst EditLinkStyles = styled.a`\r\n  position: absolute;\r\n  bottom: -6px;\r\n  right: 50px;\r\n  font-size: 22px;\r\n  color: white;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default class Book extends Component {\r\n  static propTypes = {\r\n    book: PropTypes.object.isRequired\r\n  };\r\n\r\n  render() {\r\n    const { book, me } = this.props;\r\n\r\n    const toReadIds = me.toRead.map(item => item.book.id);\r\n    const readItIds = me.readIt.map(item => item.book.id);\r\n    return (\r\n      <BookStyles>\r\n        <Link\r\n          href={{\r\n            pathname: \"/book\",\r\n            query: { id: book.id }\r\n          }}\r\n        >\r\n          <a style={{ height: \"100%\" }}>\r\n            <div\r\n              style={{\r\n                background: `url('${book.image}')`,\r\n                backgroundSize: \"cover\",\r\n                height: \"100%\",\r\n                borderRadius: \"8px\"\r\n              }}\r\n            >\r\n              {/* <a>{book.image && <img src={book.image} alt={book.title} />}</a> */}\r\n            </div>\r\n          </a>\r\n        </Link>\r\n        <Link\r\n          href={{\r\n            pathname: \"update-book\",\r\n            query: { id: book.id }\r\n          }}\r\n        >\r\n          <EditLinkStyles>\r\n            <svg\r\n              stroke=\"currentColor\"\r\n              fill=\"currentColor\"\r\n              strokeWidth=\"0\"\r\n              viewBox=\"0 0 576 512\"\r\n              height=\"1em\"\r\n              width=\"1em\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path d=\"M402.3 344.9l32-32c5-5 13.7-1.5 13.7 5.7V464c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h273.5c7.1 0 10.7 8.6 5.7 13.7l-32 32c-1.5 1.5-3.5 2.3-5.7 2.3H48v352h352V350.5c0-2.1.8-4.1 2.3-5.6zm156.6-201.8L296.3 405.7l-90.4 10c-26.2 2.9-48.5-19.2-45.6-45.6l10-90.4L432.9 17.1c22.9-22.9 59.9-22.9 82.7 0l43.2 43.2c22.9 22.9 22.9 60 .1 82.8zM460.1 174L402 115.9 216.2 301.8l-7.3 65.3 65.3-7.3L460.1 174zm64.8-79.7l-43.2-43.2c-4.1-4.1-10.8-4.1-14.8 0L436 82l58.1 58.1 30.9-30.9c4-4.2 4-10.8-.1-14.9z\"></path>\r\n            </svg>\r\n          </EditLinkStyles>\r\n        </Link>\r\n        <DeleteBook id={book.id}>\r\n          <svg\r\n            stroke=\"currentColor\"\r\n            fill=\"currentColor\"\r\n            strokeWidth=\"0\"\r\n            viewBox=\"0 0 1024 1024\"\r\n            height=\"1em\"\r\n            width=\"1em\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path d=\"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\"></path>\r\n          </svg>\r\n        </DeleteBook>\r\n        <div className=\"toReadButton\">\r\n          {toReadIds.indexOf(book.id) > -1 ? (\r\n            <RemoveFromToRead id={book.id} />\r\n          ) : (\r\n            <AddToToRead id={book.id} />\r\n          )}\r\n        </div>{\" \"}\r\n        <div className=\"readItButton\">\r\n          {readItIds.indexOf(book.id) > -1 ? (\r\n            <RemoveFromReadIt id={book.id} />\r\n          ) : (\r\n            <AddToReadIt id={book.id} />\r\n          )}\r\n        </div>\r\n      </BookStyles>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport styled from \"styled-components\";\r\nimport Book from \"./Book\";\r\nimport Pagination from \"./PaginationBooks\";\r\nimport { perPage } from \"../config\";\r\nimport SearchBooks from \"./SearchBooks\";\r\nimport User from \"./User\";\r\n\r\nconst ALL_BOOKS_QUERY = gql`\r\n  query ALL_BOOKS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\r\n    books(first: $first, skip: $skip, orderBy: title_DESC) {\r\n      id\r\n      title\r\n      author\r\n      year\r\n      description\r\n      image\r\n      largeImage\r\n    }\r\n  }\r\n`;\r\n\r\nconst Center = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst BooksList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;\r\n  grid-template-rows: auto;\r\n  grid-column-gap: 10px;\r\n  grid-row-gap: 10px;\r\n  max-width: ${props => props.theme.maxWidth};\r\n  margin: 0 auto;\r\n`;\r\n\r\nclass Books extends Component {\r\n  render() {\r\n    return (\r\n      <User>\r\n        {({ data: { me } }) => {\r\n          return (\r\n            <Center>\r\n              <SearchBooks />\r\n              <Pagination page={this.props.page} />\r\n              <Query\r\n                query={ALL_BOOKS_QUERY}\r\n                // fetchPolicy=\"network-only\"\r\n                variables={{\r\n                  skip: this.props.page * perPage - perPage,\r\n                  first: perPage\r\n                }}\r\n              >\r\n                {({ data, error, loading }) => {\r\n                  if (loading) return <p>Loading...</p>;\r\n                  if (error) return <p>Error: {error.message}</p>;\r\n                  return (\r\n                    <BooksList>\r\n                      {this.props.filter === \"all\" && (\r\n                        <>\r\n                          {data.books.map(book => (\r\n                            <Book book={book} key={book.id} me={me} />\r\n                          ))}\r\n                        </>\r\n                      )}\r\n                      {this.props.filter === \"toRead\" && (\r\n                        <>\r\n                          {data.books\r\n                            .filter(book => {\r\n                              const toReadIds = me.toRead.map(\r\n                                item => item.book.id\r\n                              );\r\n\r\n                              return toReadIds.indexOf(book.id) > -1;\r\n                            })\r\n                            .map(book => (\r\n                              <Book book={book} key={book.id} me={me} />\r\n                            ))}\r\n                        </>\r\n                      )}\r\n                      {this.props.filter === \"readIt\" && (\r\n                        <>\r\n                          {data.books\r\n                            .filter(book => {\r\n                              const readItIds = me.readIt.map(\r\n                                item => item.book.id\r\n                              );\r\n\r\n                              return readItIds.indexOf(book.id) > -1;\r\n                            })\r\n                            .map(book => (\r\n                              <Book book={book} key={book.id} me={me} />\r\n                            ))}\r\n                        </>\r\n                      )}\r\n                    </BooksList>\r\n                  );\r\n                }}\r\n              </Query>\r\n              <Pagination page={this.props.page} />\r\n            </Center>\r\n          );\r\n        }}\r\n      </User>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Books;\r\nexport { ALL_BOOKS_QUERY };\r\n","import React, { Component } from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { ALL_BOOKS_QUERY } from \"./Books\";\r\n\r\nconst DELETE_BOOK_MUTATION = gql`\r\n  mutation DELETE_BOOK_MUTATION($id: ID!) {\r\n    deleteBook(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass DeleteBook extends Component {\r\n  update = (cache, payload) => {\r\n    // manually update the cache on the client, so it matches the server\r\n    // 1. Read the cache for the books we want\r\n    const data = cache.readQuery({ query: ALL_BOOKS_QUERY });\r\n    console.log(data, payload);\r\n    // 2. Filter the deleted book out of the page\r\n    data.books = data.books.filter(\r\n      book => book.id !== payload.data.deleteBook.id\r\n    );\r\n    // 3. Put the books back!\r\n    cache.writeQuery({ query: ALL_BOOKS_QUERY, data });\r\n  };\r\n  render() {\r\n    return (\r\n      <Mutation\r\n        mutation={DELETE_BOOK_MUTATION}\r\n        variables={{ id: this.props.id }}\r\n        update={this.update}\r\n      >\r\n        {(deleteBook, { error }) => (\r\n          <button\r\n            onClick={() => {\r\n              if (confirm(\"Are you sure you want to delete this book?\")) {\r\n                deleteBook().catch(err => {\r\n                  alert(err.message);\r\n                });\r\n              }\r\n            }}\r\n          >\r\n            {this.props.children}\r\n          </button>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteBook;\r\n","import React from \"react\";\r\n\r\nconst DeleteButton = () => {\r\n  return <div>Delete</div>;\r\n};\r\nexport default DeleteButton;\r\n","import React, { Component } from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { ALL_GAMES_QUERY } from \"./Games\";\r\n\r\nconst DELETE_GAME_MUTATION = gql`\r\n  mutation DELETE_GAME_MUTATION($id: ID!) {\r\n    deleteGame(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass DeleteGame extends Component {\r\n  update = (cache, payload) => {\r\n    // manually update the cache on the client, so it matches the server\r\n    // 1. Read the cache for the games we want\r\n    const data = cache.readQuery({ query: ALL_GAMES_QUERY });\r\n    console.log(data, payload);\r\n    // 2. Filter the deleted game out of the page\r\n    data.games = data.games.filter(\r\n      game => game.id !== payload.data.deleteGame.id\r\n    );\r\n    // 3. Put the games back!\r\n    cache.writeQuery({ query: ALL_GAMES_QUERY, data });\r\n  };\r\n  render() {\r\n    return (\r\n      <Mutation\r\n        mutation={DELETE_GAME_MUTATION}\r\n        variables={{ id: this.props.id }}\r\n        update={this.update}\r\n      >\r\n        {(deleteGame, { error }) => (\r\n          <button\r\n            onClick={() => {\r\n              if (confirm(\"Are you sure you want to delete this Game?\")) {\r\n                deleteGame().catch(err => {\r\n                  alert(err.message);\r\n                });\r\n              }\r\n            }}\r\n          >\r\n            {this.props.children}\r\n          </button>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteGame;\r\n","import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { ALL_ITEMS_QUERY } from './Items';\n\nconst DELETE_ITEM_MUTATION = gql`\n  mutation DELETE_ITEM_MUTATION($id: ID!) {\n    deleteItem(id: $id) {\n      id\n    }\n  }\n`;\n\nclass DeleteItem extends Component {\n  update = (cache, payload) => {\n    // manually update the cache on the client, so it matches the server\n    // 1. Read the cache for the items we want\n    const data = cache.readQuery({ query: ALL_ITEMS_QUERY });\n    console.log(data, payload);\n    // 2. Filter the deleted item out of the page\n    data.items = data.items.filter(item => item.id !== payload.data.deleteItem.id);\n    // 3. Put the items back!\n    cache.writeQuery({ query: ALL_ITEMS_QUERY, data });\n  };\n  render() {\n    return (\n      <Mutation\n        mutation={DELETE_ITEM_MUTATION}\n        variables={{ id: this.props.id }}\n        update={this.update}\n      >\n        {(deleteItem, { error }) => (\n          <button\n            onClick={() => {\n              if (confirm('Are you sure you want to delete this item?')) {\n                deleteItem().catch(err => {\n                  alert(err.message);\n                })\n              }\n            }}\n          >\n            {this.props.children}\n          </button>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default DeleteItem;\n","import React, { Component } from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { ALL_MOVIES_QUERY } from \"./Movies\";\r\nimport styled from \"styled-components\";\r\nimport { GoTrashcan } from \"react-icons/go\";\r\n\r\nconst DELETE_MOVIE_MUTATION = gql`\r\n  mutation DELETE_MOVIE_MUTATION($id: ID!) {\r\n    deleteMovie(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass DeleteMovie extends Component {\r\n  update = (cache, payload) => {\r\n    // manually update the cache on the client, so it matches the server\r\n    // 1. Read the cache for the items we want\r\n    const data = cache.readQuery({ query: ALL_MOVIES_QUERY });\r\n    console.log(data, payload);\r\n    // 2. Filter the deleted item out of the page\r\n    data.movies = data.movies.filter(\r\n      movie => movie.id !== payload.data.deleteMovie.id\r\n    );\r\n    // 3. Put the items back!\r\n    cache.writeQuery({ query: ALL_MOVIES_QUERY, data });\r\n  };\r\n  render() {\r\n    return (\r\n      <Mutation\r\n        mutation={DELETE_MOVIE_MUTATION}\r\n        variables={{ id: this.props.id }}\r\n        update={this.update}\r\n      >\r\n        {(deleteMovie, { error }) => (\r\n          <button\r\n            onClick={() => {\r\n              if (confirm(\"Are you sure you want to delete this Movie?\")) {\r\n                deleteMovie().catch(err => {\r\n                  alert(err.message);\r\n                });\r\n              }\r\n            }}\r\n          >\r\n            <GoTrashcan />\r\n          </button>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteMovie;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Link from \"next/link\";\r\n\r\nimport PriceTag from \"./styles/PriceTag\";\r\nimport DeleteGame from \"./DeleteGame\";\r\nimport AddToCart from \"./AddToCart\";\r\nimport styled from \"styled-components\";\r\n\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport AddToToPlay from \"./AddToToPlay\";\r\nimport RemoveFromToPlay from \"./RemoveFromToPlay\";\r\nimport AddToPlayedIt from \"./AddToPlayedIt\";\r\nimport RemoveFromPlayedIt from \"./RemoveFromPlayedIt\";\r\n\r\nconst GameStyles = styled.div`\r\n  background: white;\r\n  border: 1px solid ${props => props.theme.offWhite};\r\n  box-shadow: ${props => props.theme.bs};\r\n  position: relative;\r\n  display: flex;\r\n  padding: 4px;\r\n  .gameImage {\r\n    height: 100%;\r\n    width: 40%;\r\n  }\r\n  .gameYear {\r\n    position: absolute;\r\n    left: 72px;\r\n    bottom: 44px;\r\n  }\r\n  .gameDetails {\r\n    width: 60%;\r\n    text-align: left;\r\n    position: relative;\r\n  }\r\n  h3 {\r\n    margin: 0;\r\n    margin: 0.8rem 1.8rem;\r\n  }\r\n  p {\r\n    line-height: 2;\r\n    font-weight: 300;\r\n    flex-grow: 1;\r\n    padding: 0rem 1.8rem;\r\n    margin: 0;\r\n    font-size: 1.5rem;\r\n  }\r\n  .buttonList {\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 10px;\r\n    cursor: pointer;\r\n\r\n    & > * {\r\n      background: white;\r\n      border: 0;\r\n      font-size: 1rem;\r\n      padding: 1rem;\r\n    }\r\n  }\r\n`;\r\nconst Title = styled.h3`\r\n  /* transform: skew(-1deg) rotate(3deg); */\r\n\r\n  text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.1);\r\n  a {\r\n    background: ${props => props.theme.red};\r\n    display: inline;\r\n    line-height: 1.3;\r\n    font-size: 2.4rem;\r\n    text-align: center;\r\n    color: white;\r\n    padding: 0 1rem;\r\n  }\r\n`;\r\nclass Game extends Component {\r\n  static propTypes = {\r\n    game: PropTypes.object.isRequired\r\n  };\r\n\r\n  render() {\r\n    const { game, me } = this.props;\r\n\r\n    const toPlayIds = me.toPlay.map(item => item.game.id);\r\n    const playedItIds = me.playedIt.map(item => item.game.id);\r\n    return (\r\n      <GameStyles>\r\n        {/* {game.image && <img src={game.image} alt={game.title} />} */}\r\n        <div className=\"gameYear\">\r\n          {\" \"}\r\n          <PriceTag>{game.year}</PriceTag>\r\n        </div>\r\n        <div\r\n          className=\"gameImage\"\r\n          style={{\r\n            background: `url('${game.image}')`,\r\n            backgroundSize: \"cover\",\r\n            height: \"100%\"\r\n          }}\r\n        ></div>\r\n        <div className=\"gameDetails\">\r\n          <Title>\r\n            <Link\r\n              href={{\r\n                pathname: \"/game\",\r\n                query: { id: game.id }\r\n              }}\r\n            >\r\n              <a>{game.title}</a>\r\n            </Link>\r\n          </Title>\r\n          {/* <p>{game.description}</p> */}\r\n          <p>console</p>\r\n          <p>developer</p>\r\n          <div className=\"toPlayButton\">\r\n            {toPlayIds.indexOf(game.id) > -1 ? (\r\n              <RemoveFromToPlay id={game.id} />\r\n            ) : (\r\n              <AddToToPlay id={game.id} />\r\n            )}\r\n          </div>{\" \"}\r\n          <div className=\"playedItButton\">\r\n            {playedItIds.indexOf(game.id) > -1 ? (\r\n              <RemoveFromPlayedIt id={game.id} />\r\n            ) : (\r\n              <AddToPlayedIt id={game.id} />\r\n            )}\r\n          </div>\r\n          <div\r\n            className=\"buttonList\"\r\n            style={{ display: \"flex\", justifyContent: \"center\" }}\r\n          >\r\n            <Link\r\n              href={{\r\n                pathname: \"update-game\",\r\n                query: { id: game.id }\r\n              }}\r\n            >\r\n              <a>\r\n                <svg\r\n                  stroke=\"currentColor\"\r\n                  fill=\"currentColor\"\r\n                  strokeWidth=\"0\"\r\n                  viewBox=\"0 0 576 512\"\r\n                  height=\"1em\"\r\n                  width=\"1em\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path d=\"M402.3 344.9l32-32c5-5 13.7-1.5 13.7 5.7V464c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h273.5c7.1 0 10.7 8.6 5.7 13.7l-32 32c-1.5 1.5-3.5 2.3-5.7 2.3H48v352h352V350.5c0-2.1.8-4.1 2.3-5.6zm156.6-201.8L296.3 405.7l-90.4 10c-26.2 2.9-48.5-19.2-45.6-45.6l10-90.4L432.9 17.1c22.9-22.9 59.9-22.9 82.7 0l43.2 43.2c22.9 22.9 22.9 60 .1 82.8zM460.1 174L402 115.9 216.2 301.8l-7.3 65.3 65.3-7.3L460.1 174zm64.8-79.7l-43.2-43.2c-4.1-4.1-10.8-4.1-14.8 0L436 82l58.1 58.1 30.9-30.9c4-4.2 4-10.8-.1-14.9z\"></path>\r\n                </svg>\r\n              </a>\r\n            </Link>\r\n            <div>add to list</div>\r\n            <DeleteGame id={game.id}>\r\n              <svg\r\n                stroke=\"currentColor\"\r\n                fill=\"currentColor\"\r\n                strokeWidth=\"0\"\r\n                viewBox=\"0 0 1024 1024\"\r\n                height=\"1em\"\r\n                width=\"1em\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path d=\"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\"></path>\r\n              </svg>\r\n            </DeleteGame>\r\n          </div>\r\n          {/* <div className=\"buttonList\">\r\n            <Link\r\n              href={{\r\n                pathname: \"update\",\r\n                query: { id: game.id }\r\n              }}\r\n            >\r\n              <a>Edit ✏️</a>\r\n            </Link>\r\n            <AddToCart id={game.id} />\r\n            <DeleteGame id={game.id}>Delete This Game</DeleteGame>\r\n          </div> */}\r\n        </div>\r\n      </GameStyles>\r\n    );\r\n  }\r\n}\r\nexport default Game;\r\n","import React, { Component } from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport styled from \"styled-components\";\r\nimport Game from \"./Game\";\r\nimport Pagination from \"./PaginationGames\";\r\nimport { perPage } from \"../config\";\r\nimport SearchGames from \"./SearchGames\";\r\nimport User from \"./User\";\r\n\r\nconst ALL_GAMES_QUERY = gql`\r\n  query ALL_GAMES_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\r\n    games(first: $first, skip: $skip, orderBy: title_DESC) {\r\n      id\r\n      title\r\n      developer\r\n      year\r\n      description\r\n      image\r\n      largeImage\r\n    }\r\n  }\r\n`;\r\n\r\nconst Center = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst GamesList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-template-rows: 200px 200px 200px;\r\n  grid-column-gap: 20px;\r\n  grid-row-gap: 20px;\r\n  max-width: ${props => props.theme.maxWidth};\r\n  margin: 0 auto;\r\n`;\r\n\r\nclass Games extends Component {\r\n  render() {\r\n    return (\r\n      <User>\r\n        {({ data: { me } }) => {\r\n          return (\r\n            <Center>\r\n              <SearchGames />\r\n              <Pagination page={this.props.page} />\r\n              <Query\r\n                query={ALL_GAMES_QUERY}\r\n                // fetchPolicy=\"network-only\"\r\n                variables={{\r\n                  skip: this.props.page * perPage - perPage,\r\n                  first: perPage\r\n                }}\r\n              >\r\n                {({ data, error, loading }) => {\r\n                  if (loading) return <p>Loading...</p>;\r\n                  if (error) return <p>Error: {error.message}</p>;\r\n                  return (\r\n                    <GamesList>\r\n                      {this.props.filter === \"all\" && (\r\n                        <>\r\n                          {data.games.map(game => (\r\n                            <Game game={game} key={game.id} me={me} />\r\n                          ))}\r\n                        </>\r\n                      )}\r\n                      {this.props.filter === \"toPlay\" && (\r\n                        <>\r\n                          {data.games\r\n                            .filter(game => {\r\n                              const toPlayIds = me.toPlay.map(\r\n                                item => item.game.id\r\n                              );\r\n\r\n                              return toPlayIds.indexOf(game.id) > -1;\r\n                            })\r\n                            .map(game => (\r\n                              <Game game={game} key={game.id} me={me} />\r\n                            ))}\r\n                        </>\r\n                      )}\r\n                      {this.props.filter === \"playedIt\" && (\r\n                        <>\r\n                          {data.games\r\n                            .filter(game => {\r\n                              const playedItIds = me.playedIt.map(\r\n                                item => item.game.id\r\n                              );\r\n\r\n                              return playedItIds.indexOf(game.id) > -1;\r\n                            })\r\n                            .map(game => (\r\n                              <Game game={game} key={game.id} me={me} />\r\n                            ))}\r\n                        </>\r\n                      )}\r\n                    </GamesList>\r\n                  );\r\n                }}\r\n              </Query>\r\n              <Pagination page={this.props.page} />\r\n            </Center>\r\n          );\r\n        }}\r\n      </User>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Games;\r\nexport { ALL_GAMES_QUERY };\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Link from \"next/link\";\nimport Title from \"./styles/Title\";\nimport ItemStyles from \"./styles/ItemStyles\";\nimport PriceTag from \"./styles/PriceTag\";\nimport formatMoney from \"../lib/formatMoney\";\nimport DeleteItem from \"./DeleteItem\";\nimport AddToCart from \"./AddToCart\";\n\nexport default class Item extends Component {\n  static propTypes = {\n    item: PropTypes.object.isRequired\n  };\n\n  render() {\n    const { item } = this.props;\n    return (\n      <ItemStyles>\n        {item.image && <img src={item.image} alt={item.title} />}\n\n        <Title>\n          <Link\n            href={{\n              pathname: \"/item\",\n              query: { id: item.id }\n            }}\n          >\n            <a>{item.title}</a>\n          </Link>\n        </Title>\n        <PriceTag>{formatMoney(item.price)}</PriceTag>\n        <p>{item.description}</p>\n\n        <div className=\"buttonList\">\n          <Link\n            href={{\n              pathname: \"update\",\n              query: { id: item.id }\n            }}\n          >\n            <a>Edit ✏️</a>\n          </Link>\n          <AddToCart id={item.id} />\n          <DeleteItem id={item.id}>Delete This Item</DeleteItem>\n        </div>\n      </ItemStyles>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport styled from \"styled-components\";\nimport Item from \"./Item\";\nimport Pagination from \"./Pagination\";\nimport { perPage } from \"../config\";\n\nconst ALL_ITEMS_QUERY = gql`\n  query ALL_ITEMS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\n    items(first: $first, skip: $skip, orderBy: createdAt_DESC) {\n      id\n      title\n      price\n      description\n      image\n      largeImage\n    }\n  }\n`;\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nconst ItemsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n  max-width: ${props => props.theme.maxWidth};\n  margin: 0 auto;\n`;\n\nclass Items extends Component {\n  render() {\n    return (\n      <Center>\n        <Pagination page={this.props.page} />\n        <Query\n          query={ALL_ITEMS_QUERY}\n          // fetchPolicy=\"network-only\"\n          variables={{\n            skip: this.props.page * perPage - perPage,\n            first: perPage\n          }}\n        >\n          {({ data, error, loading }) => {\n            if (loading) return <p>Loading...</p>;\n            if (error) return <p>Error: {error.message}</p>;\n            return (\n              <ItemsList>\n                {data.items.map(item => (\n                  <Item item={item} key={item.id} />\n                ))}\n              </ItemsList>\n            );\n          }}\n        </Query>\n        <Pagination page={this.props.page} />\n      </Center>\n    );\n  }\n}\n\nexport default Items;\nexport { ALL_ITEMS_QUERY };\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Link from \"next/link\";\r\nimport styled from \"styled-components\";\r\n\r\nimport PriceTag from \"./styles/PriceTag\";\r\nimport formatMoney from \"../lib/formatMoney\";\r\nimport DeleteMovie from \"./DeleteMovie\";\r\nimport AddToCart from \"./AddToCart\";\r\n\r\nconst MovieStyles = styled.div`\r\n  background: white;\r\n  border: 1px solid ${props => props.theme.offWhite};\r\n  box-shadow: ${props => props.theme.bs};\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  img {\r\n    width: 100%;\r\n    height: 300px;\r\n    object-fit: cover;\r\n  }\r\n  p {\r\n    line-height: 2;\r\n    font-weight: 300;\r\n    flex-grow: 1;\r\n    padding: 0 1rem;\r\n    font-size: 1.5rem;\r\n  }\r\n  .buttonList {\r\n    display: grid;\r\n    width: 100%;\r\n    border-top: 1px solid ${props => props.theme.lightgrey};\r\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\r\n    grid-gap: 1px;\r\n    background: ${props => props.theme.lightgrey};\r\n    & > * {\r\n      background: white;\r\n      border: 0;\r\n      font-size: 1rem;\r\n      padding: 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  margin: 0 1rem;\r\n  text-align: center;\r\n  transform: skew(-5deg) rotate(-1deg);\r\n  margin-top: -3rem;\r\n  text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.1);\r\n  a {\r\n    background: ${props => props.theme.red};\r\n    display: inline;\r\n    line-height: 1.3;\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    color: white;\r\n    padding: 0 1rem;\r\n  }\r\n`;\r\n\r\nexport default class Movie extends Component {\r\n  static propTypes = {\r\n    movie: PropTypes.object.isRequired\r\n  };\r\n\r\n  render() {\r\n    const { movie } = this.props;\r\n    return (\r\n      <MovieStyles>\r\n        {movie.image && <img src={movie.image} alt={movie.title} />}\r\n\r\n        <Title>\r\n          <Link\r\n            href={{\r\n              pathname: \"/movie\",\r\n              query: { id: movie.id }\r\n            }}\r\n          >\r\n            <a>{movie.title}</a>\r\n          </Link>\r\n        </Title>\r\n        <PriceTag>{movie.year}</PriceTag>\r\n        <p>{movie.description}</p>\r\n\r\n        <div className=\"buttonList\">\r\n          <Link\r\n            href={{\r\n              pathname: \"update\",\r\n              query: { id: movie.id }\r\n            }}\r\n          >\r\n            <a>Edit ✏️</a>\r\n          </Link>\r\n          <AddToCart id={movie.id} />\r\n          <DeleteMovie id={movie.id}>Delete This Movie</DeleteMovie>\r\n        </div>\r\n      </MovieStyles>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Link from \"next/link\";\r\nimport styled from \"styled-components\";\r\n\r\nimport PriceTag from \"./styles/PriceTag\";\r\nimport formatMoney from \"../lib/formatMoney\";\r\nimport DeleteMovie from \"./DeleteMovie\";\r\n\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport AddToCart from \"./AddToCart\";\r\nimport AddToToWatch from \"./AddToToWatch\";\r\nimport RemoveFromToWatch from \"./RemoveFromToWatch\";\r\nimport AddToSeenIt from \"./AddToSeenIt\";\r\nimport RemoveFromSeenIt from \"./RemoveFromSeenIt\";\r\n\r\nimport { TiEdit } from \"react-icons/ti\";\r\n\r\nconst CardTallStyles = styled.div`\r\n  height: 355px;\r\n  width: 190px;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 275px;\r\n    object-fit: cover;\r\n    transition: all 0.3s;\r\n  }\r\n  img:hover {\r\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.67);\r\n  }\r\n  .CardTall__title {\r\n    font-size: 1.6rem;\r\n    line-height: 2.4rem;\r\n    font-weight: 700;\r\n    max-width: 15.6rem;\r\n    text-align: left;\r\n    cursor: pointer;\r\n  }\r\n  .CardTall__title:hover {\r\n    text-decoration: underline;\r\n  }\r\n  .CardTall__buttons {\r\n    height: 24px;\r\n    display: flex;\r\n  }\r\n  .CardTall__buttons {\r\n    cursor: pointer;\r\n  }\r\n  .CardTall__details {\r\n    margin-top: 0.4rem;\r\n    font-size: 1.4rem;\r\n    line-height: 2.6rem;\r\n  }\r\n  .CardTall__details span {\r\n    cursor: pointer;\r\n  }\r\n  .CardTall__details span:hover {\r\n    text-decoration: underline;\r\n  }\r\n  .flex-apart {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  svg {\r\n    font-size: 1.92rem;\r\n  }\r\n  button {\r\n    background: #fff;\r\n    border: none;\r\n    padding: 0 0 0 4px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst MovieCard = ({ movie, me }) => {\r\n  const toWatchIds = me.toWatch.map(item => item.movie.id);\r\n  const seenItIds = me.seenIt.map(item => item.movie.id);\r\n\r\n  return (\r\n    <CardTallStyles>\r\n      <Link\r\n        href={{\r\n          pathname: \"/movie\",\r\n          query: { id: movie.id }\r\n        }}\r\n      >\r\n        <a>{movie.image && <img src={movie.image} alt=\"movie poster\" />}</a>\r\n      </Link>\r\n\r\n      <div className=\"movie-details\">\r\n        <div className=\"flex-apart\">\r\n          <Link\r\n            href={{\r\n              pathname: \"/movie\",\r\n              query: { id: movie.id }\r\n            }}\r\n          >\r\n            <span className=\"CardTall__title\">{movie.title}</span>\r\n          </Link>\r\n\r\n          <div className=\"CardTall__buttons\">\r\n            <Link\r\n              href={{\r\n                pathname: \"update-movie\",\r\n                query: { id: movie.id }\r\n              }}\r\n            >\r\n              <TiEdit />\r\n            </Link>\r\n            <DeleteMovie id={movie.id}>Delete This Movie</DeleteMovie>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex-apart CardTall__details\">\r\n          <span>genre</span>\r\n          <span>{movie.year}</span>\r\n          {toWatchIds.indexOf(movie.id) > -1 ? (\r\n            <RemoveFromToWatch id={movie.id} />\r\n          ) : (\r\n            <AddToToWatch id={movie.id} />\r\n          )}\r\n          {seenItIds.indexOf(movie.id) > -1 ? (\r\n            <RemoveFromSeenIt id={movie.id} />\r\n          ) : (\r\n            <AddToSeenIt id={movie.id} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </CardTallStyles>\r\n  );\r\n};\r\nexport default MovieCard;\r\n","import React, { Component } from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport styled from \"styled-components\";\r\nimport Movie from \"./Movie\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport Pagination from \"./PaginationMovies\";\r\nimport { perPage } from \"../config\";\r\nimport SearchMovies from \"./SearchMovies\";\r\nimport User from \"./User\";\r\n\r\nconst ALL_MOVIES_QUERY = gql`\r\n  query ALL_MOVIES_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\r\n    movies(first: $first, skip: $skip, orderBy: title_DESC) {\r\n      id\r\n      title\r\n      year\r\n      description\r\n      image\r\n      largeImage\r\n    }\r\n  }\r\n`;\r\n\r\nconst Center = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst MoviesList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;\r\n  grid-gap: 40px;\r\n  max-width: ${props => props.theme.maxWidth};\r\n  margin: 40px auto 100px auto;\r\n`;\r\n\r\nclass Movies extends Component {\r\n  render() {\r\n    const filters = [\"all\", \"toWatch\", \"seenIt\", \"genre\", \"year\"];\r\n    return (\r\n      <User>\r\n        {({ data: { me } }) => {\r\n          return (\r\n            <Center>\r\n              <SearchMovies />\r\n              <Pagination page={this.props.page} />\r\n              <Query\r\n                query={ALL_MOVIES_QUERY}\r\n                // fetchPolicy=\"network-only\"\r\n                variables={{\r\n                  skip: this.props.page * perPage - perPage,\r\n                  first: perPage\r\n                }}\r\n              >\r\n                {({ data, error, loading }) => {\r\n                  if (loading) return <p>Loading...</p>;\r\n                  if (error) return <p>Error: {error.message}</p>;\r\n\r\n                  return (\r\n                    <MoviesList>\r\n                      {this.props.filter === \"all\" && (\r\n                        <>\r\n                          {data.movies.map(movie => (\r\n                            <MovieCard movie={movie} key={movie.id} me={me} />\r\n                          ))}\r\n                        </>\r\n                      )}\r\n                      {this.props.filter === \"toWatch\" && (\r\n                        <>\r\n                          {data.movies\r\n                            .filter(movie => {\r\n                              const toWatchIds = me.toWatch.map(\r\n                                item => item.movie.id\r\n                              );\r\n\r\n                              return toWatchIds.indexOf(movie.id) > -1;\r\n                            })\r\n                            .map(movie => (\r\n                              <MovieCard movie={movie} key={movie.id} me={me} />\r\n                            ))}\r\n                        </>\r\n                      )}\r\n                      {this.props.filter === \"seenIt\" && (\r\n                        <>\r\n                          {data.movies\r\n                            .filter(movie => {\r\n                              const seenItIds = me.seenIt.map(\r\n                                item => item.movie.id\r\n                              );\r\n\r\n                              return seenItIds.indexOf(movie.id) > -1;\r\n                            })\r\n                            .map(movie => (\r\n                              <MovieCard movie={movie} key={movie.id} me={me} />\r\n                            ))}\r\n                        </>\r\n                      )}\r\n                      {/* {this.props.filter === \"genre\" && (\r\n                        <>\r\n                        {data.movies\r\n                          .filter(movie => {\r\n                            const seenItIds = me.seenIt.map(\r\n                              item => item.movie.id\r\n                            );\r\n\r\n                            return seenItIds.indexOf(movie.id) > -1;\r\n                          })\r\n                          .map(movie => (\r\n                            <MovieCard movie={movie} key={movie.id} me={me} />\r\n                          ))}\r\n                      </>\r\n                      )}\r\n                      {this.props.filter === \"year\" && (\r\n                        <>\r\n                          {data.movies.map(movie => (\r\n                            <MovieCard movie={movie} key={movie.id} me={me} />\r\n                          ))}\r\n                        </>\r\n                      )} */}\r\n                    </MoviesList>\r\n                  );\r\n                }}\r\n              </Query>\r\n              <Pagination page={this.props.page} />\r\n            </Center>\r\n          );\r\n        }}\r\n      </User>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\nexport { ALL_MOVIES_QUERY };\r\n","import React from \"react\";\nimport PaginationStyles from \"./styles/PaginationStyles\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport Link from \"next/link\";\nimport Head from \"next/head\";\nimport { perPage } from \"../config\";\n\nconst PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    itemsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst Pagination = props => {\n  return (\n    <Query query={PAGINATION_QUERY}>\n      {({ data, loading, error }) => {\n        if (loading) return <p>Loading...</p>;\n        const count = data.itemsConnection.aggregate.count;\n        const pages = Math.ceil(count / perPage);\n        const page = props.page;\n        return (\n          <PaginationStyles>\n            <Head>\n              <title>\n                Culture Club! - Page {page} of {pages}{\" \"}\n              </title>\n            </Head>\n            <Link\n              prefetch\n              href={{\n                pathname: \"items\",\n                query: { page: page - 1 }\n              }}\n            >\n              <a className=\"prev\" aria-disabled={page <= 1}>← Prev</a>\n            </Link>\n            <p>\n              Page {page} of {pages}!\n            </p>\n            <p>{count} items total</p>\n            <Link\n              prefetch\n              href={{\n                pathname: \"items\",\n                query: { page: page + 1 }\n              }}\n            >\n              <a className=\"next\" aria-disabled={page >= pages}>→ Next</a>\n            </Link>\n          </PaginationStyles>\n        );\n      }}\n    </Query>\n  );\n};\nexport default Pagination;\n","import React from \"react\";\r\nimport PaginationStyles from \"./styles/PaginationStyles\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\nimport Link from \"next/link\";\r\nimport Head from \"next/head\";\r\nimport { perPage } from \"../config\";\r\n\r\nconst PAGINATION_QUERY = gql`\r\n  query PAGINATION_QUERY {\r\n    booksConnection {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Pagination = props => {\r\n  return (\r\n    <Query query={PAGINATION_QUERY}>\r\n      {({ data, loading, error }) => {\r\n        if (loading) return <p>Loading...</p>;\r\n        const count = data.booksConnection.aggregate.count;\r\n        const pages = Math.ceil(count / perPage);\r\n        const page = props.page;\r\n        return (\r\n          <PaginationStyles>\r\n            <Head>\r\n              <title>\r\n                Culture Club! - Page {page} of {pages}{\" \"}\r\n              </title>\r\n            </Head>\r\n            <Link\r\n              prefetch\r\n              href={{\r\n                pathname: \"books\",\r\n                query: { page: page - 1 }\r\n              }}\r\n            >\r\n              <a className=\"prev\" aria-disabled={page <= 1}>\r\n                ← Prev\r\n              </a>\r\n            </Link>\r\n            <p>\r\n              Page {page} of {pages}!\r\n            </p>\r\n            <p>{count} books total</p>\r\n            <Link\r\n              prefetch\r\n              href={{\r\n                pathname: \"books\",\r\n                query: { page: page + 1 }\r\n              }}\r\n            >\r\n              <a className=\"next\" aria-disabled={page >= pages}>\r\n                → Next\r\n              </a>\r\n            </Link>\r\n          </PaginationStyles>\r\n        );\r\n      }}\r\n    </Query>\r\n  );\r\n};\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport PaginationStyles from \"./styles/PaginationStyles\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\nimport Link from \"next/link\";\r\nimport Head from \"next/head\";\r\nimport { perPage } from \"../config\";\r\n\r\nconst PAGINATION_QUERY = gql`\r\n  query PAGINATION_QUERY {\r\n    gamesConnection {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Pagination = props => {\r\n  return (\r\n    <Query query={PAGINATION_QUERY}>\r\n      {({ data, loading, error }) => {\r\n        if (loading) return <p>Loading...</p>;\r\n        const count = data.gamesConnection.aggregate.count;\r\n        const pages = Math.ceil(count / perPage);\r\n        const page = props.page;\r\n        return (\r\n          <PaginationStyles>\r\n            <Head>\r\n              <title>\r\n                Culture Club! - Page {page} of {pages}{\" \"}\r\n              </title>\r\n            </Head>\r\n            <Link\r\n              prefetch\r\n              href={{\r\n                pathname: \"games\",\r\n                query: { page: page - 1 }\r\n              }}\r\n            >\r\n              <a className=\"prev\" aria-disabled={page <= 1}>\r\n                ← Prev\r\n              </a>\r\n            </Link>\r\n            <p>\r\n              Page {page} of {pages}!\r\n            </p>\r\n            <p>{count} games total</p>\r\n            <Link\r\n              prefetch\r\n              href={{\r\n                pathname: \"games\",\r\n                query: { page: page + 1 }\r\n              }}\r\n            >\r\n              <a className=\"next\" aria-disabled={page >= pages}>\r\n                → Next\r\n              </a>\r\n            </Link>\r\n          </PaginationStyles>\r\n        );\r\n      }}\r\n    </Query>\r\n  );\r\n};\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport PaginationStyles from \"./styles/PaginationStyles\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\nimport Link from \"next/link\";\r\nimport Head from \"next/head\";\r\nimport { perPage } from \"../config\";\r\n\r\nconst PAGINATION_QUERY = gql`\r\n  query PAGINATION_QUERY {\r\n    moviesConnection {\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Pagination = props => {\r\n  return (\r\n    <Query query={PAGINATION_QUERY}>\r\n      {({ data, loading, error }) => {\r\n        if (loading) return <p>Loading...</p>;\r\n        const count = data.moviesConnection.aggregate.count;\r\n        const pages = Math.ceil(count / perPage);\r\n        const page = props.page;\r\n        return (\r\n          <PaginationStyles>\r\n            <Head>\r\n              <title>\r\n                Culture Club! - Page {page} of {pages}{\" \"}\r\n              </title>\r\n            </Head>\r\n            <Link\r\n              prefetch\r\n              href={{\r\n                pathname: \"movies\",\r\n                query: { page: page - 1 }\r\n              }}\r\n            >\r\n              <a className=\"prev\" aria-disabled={page <= 1}>\r\n                ← Prev\r\n              </a>\r\n            </Link>\r\n            <p>\r\n              Page {page} of {pages}!\r\n            </p>\r\n            <p>{count} movies total</p>\r\n            <Link\r\n              prefetch\r\n              href={{\r\n                pathname: \"movies\",\r\n                query: { page: page + 1 }\r\n              }}\r\n            >\r\n              <a className=\"next\" aria-disabled={page >= pages}>\r\n                → Next\r\n              </a>\r\n            </Link>\r\n          </PaginationStyles>\r\n        );\r\n      }}\r\n    </Query>\r\n  );\r\n};\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\n\r\nconst REMOVE_FROM_PLAYED_IT_MUTATION = gql`\r\n  mutation removeFromPlayedIt($id: ID!) {\r\n    removeFromPlayedIt(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass RemoveFromPlayedIt extends React.Component {\r\n  render() {\r\n    const { id } = this.props;\r\n    return (\r\n      <Mutation\r\n        mutation={REMOVE_FROM_PLAYED_IT_MUTATION}\r\n        variables={{\r\n          id\r\n        }}\r\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n      >\r\n        {(removeFromPlayedIt, { error, loading }) => (\r\n          <button onClick={removeFromPlayedIt} disabled={loading}>\r\n            Played It\r\n            <IoMdClose />\r\n          </button>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\nexport default RemoveFromPlayedIt;\r\n","import React from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\n\r\nconst REMOVE_FROM_READ_IT_MUTATION = gql`\r\n  mutation removeFromReadIt($id: ID!) {\r\n    removeFromReadIt(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass RemoveFromReadIt extends React.Component {\r\n  render() {\r\n    const { id } = this.props;\r\n    return (\r\n      <Mutation\r\n        mutation={REMOVE_FROM_READ_IT_MUTATION}\r\n        variables={{\r\n          id\r\n        }}\r\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n      >\r\n        {(removeFromReadIt, { error, loading }) => (\r\n          <button onClick={removeFromReadIt} disabled={loading}>\r\n            Read It\r\n            {/* Remov{loading ? \"ing\" : \"e\"}  */}\r\n            <IoMdClose />\r\n          </button>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\nexport default RemoveFromReadIt;\r\n","import React from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\n\r\nconst REMOVE_FROM_SEEN_IT_MUTATION = gql`\r\n  mutation removeFromSeenIt($id: ID!) {\r\n    removeFromSeenIt(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass RemoveFromSeenIt extends React.Component {\r\n  render() {\r\n    const { id } = this.props;\r\n    return (\r\n      <Mutation\r\n        mutation={REMOVE_FROM_SEEN_IT_MUTATION}\r\n        variables={{\r\n          id\r\n        }}\r\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n      >\r\n        {(removeFromSeenIt, { error, loading }) => (\r\n          <button onClick={removeFromSeenIt} disabled={loading}>\r\n            Seen It\r\n            {/* Remov{loading ? \"ing\" : \"e\"}  */}\r\n            <IoMdClose />\r\n          </button>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\nexport default RemoveFromSeenIt;\r\n","import React from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\n\r\nconst REMOVE_FROM_TO_PLAY_MUTATION = gql`\r\n  mutation removeFromToPlay($id: ID!) {\r\n    removeFromToPlay(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass RemoveFromToPlay extends React.Component {\r\n  render() {\r\n    const { id } = this.props;\r\n    return (\r\n      <Mutation\r\n        mutation={REMOVE_FROM_TO_PLAY_MUTATION}\r\n        variables={{\r\n          id\r\n        }}\r\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n      >\r\n        {(removeFromToPlay, { error, loading }) => (\r\n          <button onClick={removeFromToPlay} disabled={loading}>\r\n            To Play\r\n            {/* Remov{loading ? \"ing\" : \"e\"}  */}\r\n            <IoMdClose />\r\n          </button>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\nexport default RemoveFromToPlay;\r\n","import React from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\n\r\nconst REMOVE_FROM_TO_READ_MUTATION = gql`\r\n  mutation removeFromToRead($id: ID!) {\r\n    removeFromToRead(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass RemoveFromToRead extends React.Component {\r\n  render() {\r\n    const { id } = this.props;\r\n    return (\r\n      <Mutation\r\n        mutation={REMOVE_FROM_TO_READ_MUTATION}\r\n        variables={{\r\n          id\r\n        }}\r\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n      >\r\n        {(removeFromToRead, { error, loading }) => (\r\n          <button onClick={removeFromToRead} disabled={loading}>\r\n            To Read\r\n            {/* Remov{loading ? \"ing\" : \"e\"}  */}\r\n            <IoMdClose />\r\n          </button>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\nexport default RemoveFromToRead;\r\n","import React from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\n\r\nconst REMOVE_FROM_TO_WATCH_MUTATION = gql`\r\n  mutation removeFromToWatch($id: ID!) {\r\n    removeFromToWatch(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass RemoveFromToWatch extends React.Component {\r\n  render() {\r\n    const { id } = this.props;\r\n    return (\r\n      <Mutation\r\n        mutation={REMOVE_FROM_TO_WATCH_MUTATION}\r\n        variables={{\r\n          id\r\n        }}\r\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n      >\r\n        {(removeFromToWatch, { error, loading }) => (\r\n          <button onClick={removeFromToWatch} disabled={loading}>\r\n            To Watch\r\n            {/* Remov{loading ? \"ing\" : \"e\"}  */}\r\n            <IoMdClose />\r\n          </button>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\nexport default RemoveFromToWatch;\r\n","import React from \"react\";\r\nimport Downshift, { resetIdCounter } from \"downshift\";\r\nimport Router from \"next/router\";\r\nimport { ApolloConsumer } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport debounce from \"lodash.debounce\";\r\nimport { DropDown, DropDownItem, SearchStyles } from \"./styles/DropDown\";\r\n\r\nconst SEARCH_BOOKS_QUERY = gql`\r\n  query SEARCH_BOOKS_QUERY($searchTerm: String!) {\r\n    books(\r\n      where: {\r\n        OR: [\r\n          { title_contains: $searchTerm }\r\n          { description_contains: $searchTerm }\r\n        ]\r\n      }\r\n    ) {\r\n      id\r\n      image\r\n      title\r\n    }\r\n  }\r\n`;\r\nfunction routeToBook(book) {\r\n  Router.push({\r\n    pathname: \"/book\",\r\n    query: {\r\n      id: book.id\r\n    }\r\n  });\r\n}\r\nclass AutoCompleteBooks extends React.Component {\r\n  state = {\r\n    books: [],\r\n    loading: false\r\n  };\r\n  onChange = debounce(async (e, client) => {\r\n    console.log(\"searching\");\r\n    console.log(client);\r\n    // turn loading on\r\n    this.setState({ loading: true });\r\n    // manually query apollo client\r\n    const res = await client.query({\r\n      query: SEARCH_BOOKS_QUERY,\r\n      variables: { searchTerm: e.target.value }\r\n    });\r\n    this.setState({\r\n      books: res.data.books,\r\n      loading: false\r\n    });\r\n  }, 350);\r\n  render() {\r\n    resetIdCounter();\r\n    return (\r\n      <SearchStyles>\r\n        <Downshift\r\n          onChange={routeToBook}\r\n          itemToString={book => (book === null ? \"\" : book.title)}\r\n        >\r\n          {({\r\n            getInputProps,\r\n            getItemProps,\r\n            isOpen,\r\n            inputValue,\r\n            highlightedIndex\r\n          }) => (\r\n            <div>\r\n              <ApolloConsumer>\r\n                {client => (\r\n                  <input\r\n                    {...getInputProps({\r\n                      type: \"search\",\r\n                      placeholder: \"search for an book\",\r\n                      id: \"search\",\r\n                      // className: this.state.loading,\r\n                      onChange: e => {\r\n                        e.persist();\r\n                        this.onChange(e, client);\r\n                      }\r\n                    })}\r\n                  />\r\n                )}\r\n              </ApolloConsumer>\r\n              {isOpen && (\r\n                <DropDown>\r\n                  {this.state.books.map((book, index) => (\r\n                    <DropDownItem\r\n                      {...getItemProps({ item: book })}\r\n                      key={book.id}\r\n                      highlighted={index === highlightedIndex}\r\n                    >\r\n                      <img width=\"50\" src={book.image} alt={book.title} />\r\n                      {book.title}\r\n                    </DropDownItem>\r\n                  ))}\r\n                  {!this.state.books.length && !this.state.loading && (\r\n                    <DropDownItem>Nothing Found for {inputValue}</DropDownItem>\r\n                  )}\r\n                </DropDown>\r\n              )}\r\n            </div>\r\n          )}\r\n        </Downshift>\r\n      </SearchStyles>\r\n    );\r\n  }\r\n}\r\nexport default AutoCompleteBooks;\r\n","import React from \"react\";\r\nimport Downshift, { resetIdCounter } from \"downshift\";\r\nimport Router from \"next/router\";\r\nimport { ApolloConsumer } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport debounce from \"lodash.debounce\";\r\nimport { DropDown, DropDownItem, SearchStyles } from \"./styles/DropDown\";\r\n\r\nconst SEARCH_GAMES_QUERY = gql`\r\n  query SEARCH_GAMES_QUERY($searchTerm: String!) {\r\n    games(\r\n      where: {\r\n        OR: [\r\n          { title_contains: $searchTerm }\r\n          { description_contains: $searchTerm }\r\n        ]\r\n      }\r\n    ) {\r\n      id\r\n      image\r\n      title\r\n    }\r\n  }\r\n`;\r\nfunction routeToGame(game) {\r\n  Router.push({\r\n    pathname: \"/game\",\r\n    query: {\r\n      id: game.id\r\n    }\r\n  });\r\n}\r\nclass AutoCompleteGames extends React.Component {\r\n  state = {\r\n    games: [],\r\n    loading: false\r\n  };\r\n  onChange = debounce(async (e, client) => {\r\n    console.log(\"searching\");\r\n    console.log(client);\r\n    // turn loading on\r\n    this.setState({ loading: true });\r\n    // manually query apollo client\r\n    const res = await client.query({\r\n      query: SEARCH_GAMES_QUERY,\r\n      variables: { searchTerm: e.target.value }\r\n    });\r\n    this.setState({\r\n      games: res.data.games,\r\n      loading: false\r\n    });\r\n  }, 350);\r\n  render() {\r\n    resetIdCounter();\r\n    return (\r\n      <SearchStyles>\r\n        <Downshift\r\n          onChange={routeToGame}\r\n          itemToString={game => (game === null ? \"\" : game.title)}\r\n        >\r\n          {({\r\n            getInputProps,\r\n            getItemProps,\r\n            isOpen,\r\n            inputValue,\r\n            highlightedIndex\r\n          }) => (\r\n            <div>\r\n              <ApolloConsumer>\r\n                {client => (\r\n                  <input\r\n                    {...getInputProps({\r\n                      type: \"search\",\r\n                      placeholder: \"search for an game\",\r\n                      id: \"search\",\r\n                      // className: this.state.loading,\r\n                      onChange: e => {\r\n                        e.persist();\r\n                        this.onChange(e, client);\r\n                      }\r\n                    })}\r\n                  />\r\n                )}\r\n              </ApolloConsumer>\r\n              {isOpen && (\r\n                <DropDown>\r\n                  {this.state.games.map((game, index) => (\r\n                    <DropDownItem\r\n                      {...getItemProps({ item: game })}\r\n                      key={game.id}\r\n                      highlighted={index === highlightedIndex}\r\n                    >\r\n                      <img width=\"50\" src={game.image} alt={game.title} />\r\n                      {game.title}\r\n                    </DropDownItem>\r\n                  ))}\r\n                  {!this.state.games.length && !this.state.loading && (\r\n                    <DropDownItem>Nothing Found for {inputValue}</DropDownItem>\r\n                  )}\r\n                </DropDown>\r\n              )}\r\n            </div>\r\n          )}\r\n        </Downshift>\r\n      </SearchStyles>\r\n    );\r\n  }\r\n}\r\nexport default AutoCompleteGames;\r\n","import React from \"react\";\r\nimport Downshift, { resetIdCounter } from \"downshift\";\r\nimport Router from \"next/router\";\r\nimport { ApolloConsumer } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport debounce from \"lodash.debounce\";\r\nimport { DropDown, DropDownItem, SearchStyles } from \"./styles/DropDown\";\r\n\r\nconst SEARCH_MOVIES_QUERY = gql`\r\n  query SEARCH_MOVIES_QUERY($searchTerm: String!) {\r\n    movies(\r\n      where: {\r\n        OR: [\r\n          { title_contains: $searchTerm }\r\n          { description_contains: $searchTerm }\r\n        ]\r\n      }\r\n    ) {\r\n      id\r\n      image\r\n      title\r\n    }\r\n  }\r\n`;\r\nfunction routeToMovie(movie) {\r\n  Router.push({\r\n    pathname: \"/movie\",\r\n    query: {\r\n      id: movie.id\r\n    }\r\n  });\r\n}\r\nclass AutoCompleteMovies extends React.Component {\r\n  state = {\r\n    movies: [],\r\n    loading: false\r\n  };\r\n  onChange = debounce(async (e, client) => {\r\n    console.log(\"searching\");\r\n    console.log(client);\r\n    // turn loading on\r\n    this.setState({ loading: true });\r\n    // manually query apollo client\r\n    const res = await client.query({\r\n      query: SEARCH_MOVIES_QUERY,\r\n      variables: { searchTerm: e.target.value }\r\n    });\r\n    this.setState({\r\n      movies: res.data.movies,\r\n      loading: false\r\n    });\r\n  }, 350);\r\n  render() {\r\n    resetIdCounter();\r\n    return (\r\n      <SearchStyles>\r\n        <Downshift\r\n          onChange={routeToMovie}\r\n          itemToString={movie => (movie === null ? \"\" : movie.title)}\r\n        >\r\n          {({\r\n            getInputProps,\r\n            getItemProps,\r\n            isOpen,\r\n            inputValue,\r\n            highlightedIndex\r\n          }) => (\r\n            <div>\r\n              <ApolloConsumer>\r\n                {client => (\r\n                  <input\r\n                    {...getInputProps({\r\n                      type: \"search\",\r\n                      placeholder: \"search for an movie\",\r\n                      id: \"search\",\r\n                      // className: this.state.loading,\r\n                      onChange: e => {\r\n                        e.persist();\r\n                        this.onChange(e, client);\r\n                      }\r\n                    })}\r\n                  />\r\n                )}\r\n              </ApolloConsumer>\r\n              {isOpen && (\r\n                <DropDown>\r\n                  {this.state.movies.map((movie, index) => (\r\n                    <DropDownItem\r\n                      {...getItemProps({ item: movie })}\r\n                      key={movie.id}\r\n                      highlighted={index === highlightedIndex}\r\n                    >\r\n                      <img width=\"50\" src={movie.image} alt={movie.title} />\r\n                      {movie.title}\r\n                    </DropDownItem>\r\n                  ))}\r\n                  {!this.state.movies.length && !this.state.loading && (\r\n                    <DropDownItem>Nothing Found for {inputValue}</DropDownItem>\r\n                  )}\r\n                </DropDown>\r\n              )}\r\n            </div>\r\n          )}\r\n        </Downshift>\r\n      </SearchStyles>\r\n    );\r\n  }\r\n}\r\nexport default AutoCompleteMovies;\r\n","import { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport PropTypes from \"prop-types\";\n\nconst CURRENT_USER_QUERY = gql`\n  query {\n    me {\n      id\n      email\n      name\n      permissions\n      toWatch {\n        id\n        movie {\n          id\n          title\n        }\n      }\n      seenIt {\n        id\n        movie {\n          id\n          title\n        }\n      }\n      toRead {\n        id\n        book {\n          id\n          title\n        }\n      }\n      readIt {\n        id\n        book {\n          id\n          title\n        }\n      }\n      toPlay {\n        id\n        game {\n          id\n          title\n        }\n      }\n      playedIt {\n        id\n        game {\n          id\n          title\n        }\n      }\n      cart {\n        id\n        quantity\n        item {\n          id\n          price\n          image\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n\nconst User = props => {\n  return (\n    <Query {...props} query={CURRENT_USER_QUERY}>\n      {payload => props.children(payload)}\n    </Query>\n  );\n};\n\nUser.propTypes = {\n  children: PropTypes.func.isRequired\n};\n\nexport default User;\nexport { CURRENT_USER_QUERY };\n","import styled, { keyframes } from \"styled-components\";\n\nconst DropDown = styled.div`\n  position: absolute;\n  width: 100%;\n  z-index: 2;\n  border: 1px solid ${props => props.theme.lightgrey};\n`;\n\nconst DropDownItem = styled.div`\n  border-bottom: 1px solid ${props => props.theme.lightgrey};\n  background: ${props => (props.highlighted ? \"#f7f7f7\" : \"white\")};\n  padding: 1rem;\n  transition: all 0.2s;\n  ${props => (props.highlighted ? \"padding-left: 2rem;\" : null)};\n  display: flex;\n  align-items: center;\n  border-left: 10px solid\n    ${props => (props.highlighted ? props.theme.lightgrey : \"white\")};\n  img {\n    margin-right: 10px;\n  }\n`;\n\nconst glow = keyframes`\n  from {\n    box-shadow: 0 0 0px yellow;\n  }\n\n  to {\n    box-shadow: 0 0 10px 1px yellow;\n  }\n`;\n\nconst SearchStyles = styled.div`\n  position: relative;\n  border: 1px solid ${props => props.theme.lightgrey};\n  border-radius: 2px;\n  input {\n    width: 100%;\n    padding: 10px;\n    border: 0;\n    font-size: 2rem;\n    &.loading {\n      animation: ${glow} 0.5s ease-in-out infinite alternate;\n    }\n  }\n`;\n\nexport { DropDown, DropDownItem, SearchStyles };\n","import styled from 'styled-components';\n\nconst Item = styled.div`\n  background: white;\n  border: 1px solid ${props => props.theme.offWhite};\n  box-shadow: ${props => props.theme.bs};\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  img {\n    width: 100%;\n    height: 400px;\n    object-fit: cover;\n  }\n  p {\n    line-height: 2;\n    font-weight: 300;\n    flex-grow: 1;\n    padding: 0 3rem;\n    font-size: 1.5rem;\n  }\n  .buttonList {\n    display: grid;\n    width: 100%;\n    border-top: 1px solid ${props => props.theme.lightgrey};\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n    grid-gap: 1px;\n    background: ${props => props.theme.lightgrey};\n    & > * {\n      background: white;\n      border: 0;\n      font-size: 1rem;\n      padding: 1rem;\n    }\n  }\n`;\n\nexport default Item;\n","import styled from 'styled-components';\n\nconst PaginationStyles = styled.div`\n  text-align: center;\n  display: inline-grid;\n  grid-template-columns: repeat(4, auto);\n  align-items: stretch;\n  justify-content: center;\n  align-content: center;\n  margin: 2rem 0;\n  border: 1px solid ${props => props.theme.lightgrey};\n  border-radius: 10px;\n  & > * {\n    margin: 0;\n    padding: 15px 30px;\n    border-right: 1px solid ${props => props.theme.lightgrey};\n    &:last-child {\n      border-right: 0;\n    }\n  }\n  a[aria-disabled='true'] {\n    color: grey;\n    pointer-events: none;\n  }\n`;\n\nexport default PaginationStyles;\n","import styled from 'styled-components';\n\nconst PriceTag = styled.span`\n  background: ${props => props.theme.red};\n  transform: rotate(3deg);\n  color: white;\n  font-weight: 600;\n  padding: 5px;\n  line-height: 1;\n  font-size: 3rem;\n  display: inline-block;\n  position: absolute;\n  top: -3px;\n  right: -3px;\n`;\n\nexport default PriceTag;\n","import styled from \"styled-components\";\n\nconst Title = styled.h3`\n  margin: 0 1rem;\n  text-align: center;\n  /* transform: skew(-1deg) rotate(3deg); */\n  margin-top: -3rem;\n  text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.1);\n  a {\n    background: ${props => props.theme.red};\n    display: inline;\n    line-height: 1.3;\n    font-size: 2.4rem;\n    text-align: center;\n    color: white;\n    padding: 0 1rem;\n  }\n`;\n\nexport default Title;\n","// This is client side config only - don't put anything in here that shouldn't be public!\nexport const endpoint = `http://localhost:4444`;\nexport const prodEndpoint = `https://culture-club-yoga-prod.herokuapp.com/`;\nexport const perPage = 16;\n\nexport const BookGenres = [\n  {\n    value: \"UNSELECTED\",\n    title: \"Select a genre\"\n  },\n  {\n    value: \"FANTASY\",\n    title: \"Fantasy\"\n  },\n  {\n    value: \"SCI_FI\",\n    title: \"Sci-Fi\"\n  },\n  {\n    value: \"CLASSICS\",\n    title: \"Classics\"\n  },\n  {\n    value: \"HORROR\",\n    title: \"Horror\"\n  },\n  {\n    value: \"MYSTERY\",\n    title: \"Mystery\"\n  },\n  {\n    value: \"COMIC\",\n    title: \"Comics\"\n  },\n  {\n    value: \"PHILOSOPHY\",\n    title: \"Philosophy\"\n  },\n  {\n    value: \"HISTORY\",\n    title: \"History\"\n  },\n  {\n    value: \"MYTHOLOGY\",\n    title: \"Mythology\"\n  },\n  {\n    value: \"BUSINESS\",\n    title: \"Business\"\n  },\n  {\n    value: \"ECONOMICS\",\n    title: \"Economics\"\n  },\n  {\n    value: \"SCIENCE\",\n    title: \"Science\"\n  },\n  {\n    value: \"ROMANCE\",\n    title: \"Romance\"\n  },\n  {\n    value: \"WESTERN\",\n    title: \"Western\"\n  },\n  {\n    value: \"CHILDRENS\",\n    title: \"Children's\"\n  },\n  {\n    value: \"BIOGRAPHY\",\n    title: \"Biography\"\n  },\n  {\n    value: \"NEW_AGE\",\n    title: \"New Age\"\n  },\n  {\n    value: \"SELF_HELP\",\n    title: \"Self Help\"\n  }\n];\nexport const GameGenres = [\n  {\n    value: \"UNSELECTED\",\n    title: \"Select a genre\"\n  },\n  {\n    value: \"RPG\",\n    title: \"Role Playing Game (RPG)\"\n  },\n  {\n    value: \"ACTION\",\n    title: \"Anime\"\n  },\n  {\n    value: \"FIGHTING\",\n    title: \"Fighting\"\n  },\n  {\n    value: \"ADVENTURE\",\n    title: \"Adventure\"\n  },\n  {\n    value: \"SIMULATION\",\n    title: \"Simulation\"\n  },\n  {\n    value: \"SCI_FI\",\n    title: \"Sci-Fi\"\n  },\n  {\n    value: \"SPORTS\",\n    title: \"Sports\"\n  },\n  {\n    value: \"CARD_OR_BOARD\",\n    title: \"Card/Board Game\"\n  },\n  {\n    value: \"PLATFORM\",\n    title: \"Platform\"\n  },\n  {\n    value: \"STEALTH\",\n    title: \"Stealth\"\n  },\n  {\n    value: \"SURVIVAL\",\n    title: \"Survival\"\n  },\n  {\n    value: \"MMORPG\",\n    title: \"MMORPG\"\n  },\n  {\n    value: \"SHOOTER\",\n    title: \"Shooter\"\n  },\n  {\n    value: \"STRATEGY\",\n    title: \"Strategy\"\n  },\n  {\n    value: \"VR\",\n    title: \"Virtual Reality\"\n  }\n];\n\nexport const MovieGenres = [\n  {\n    value: \"UNSELECTED\",\n    title: \"Select a genre\"\n  },\n  {\n    value: \"ACTION\",\n    title: \"Action\"\n  },\n  {\n    value: \"ANIME\",\n    title: \"Anime\"\n  },\n  {\n    value: \"CLASSIC\",\n    title: \"Classic\"\n  },\n  {\n    value: \"COMEDY\",\n    title: \"Comedy\"\n  },\n  {\n    value: \"DOCUMENTARY\",\n    title: \"Documentary\"\n  },\n  {\n    value: \"DRAMA\",\n    title: \"Drama\"\n  },\n  {\n    value: \"HISTORY\",\n    title: \"History\"\n  },\n  {\n    value: \"HORROR\",\n    title: \"Horror\"\n  },\n  {\n    value: \"INDEPENDENT\",\n    title: \"Independent\"\n  },\n  {\n    value: \"SCI_FI\",\n    title: \"Sci-Fi\"\n  },\n  {\n    value: \"FANTASY\",\n    title: \"Fantasy\"\n  },\n  {\n    value: \"THRILLER\",\n    title: \"Thriller\"\n  },\n  {\n    value: \"INTERNATIONAL\",\n    title: \"International\"\n  },\n  {\n    value: \"SPORTS\",\n    title: \"Sports\"\n  }\n];\n\nexport const GamePlatforms = [\n  {\n    value: \"UNSELECTED\",\n    title: \"Select a platform\"\n  },\n  {\n    value: \"PC\",\n    title: \"PC\"\n  },\n  {\n    value: \"SNES\",\n    title: \"SNES\"\n  },\n  {\n    value: \"N64\",\n    title: \"Nintendo 64\"\n  },\n  {\n    value: \"DREAMCAST\",\n    title: \"Dreamcast\"\n  },\n  {\n    value: \"GAMECUBE\",\n    title: \"Gamecube\"\n  },\n  {\n    value: \"WII\",\n    title: \"Wii\"\n  },\n  {\n    value: \"XBOX\",\n    title: \"Xbox\"\n  },\n  {\n    value: \"XBOX_360\",\n    title: \"Xbox 360\"\n  },\n  {\n    value: \"XBOX_ONE\",\n    title: \"Xbox One\"\n  },\n  {\n    value: \"PSX\",\n    title: \"Playstation\"\n  },\n  {\n    value: \"PS2\",\n    title: \"Playstation 2\"\n  },\n  {\n    value: \"PS3\",\n    title: \"Playstation 3\"\n  },\n  {\n    value: \"PS4\",\n    title: \"Playstation 4\"\n  }\n];\n","export default function(amount) {\n  const options = {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2,\n  };\n  // if its a whole, dollar amount, leave off the .00\n  if (amount % 100 === 0) options.minimumFractionDigits = 0;\n  const formatter = new Intl.NumberFormat('en-US', options);\n  return formatter.format(amount / 100);\n}\n","import Link from \"next/link\";\n// import React from 'react';\nimport Items from \"../components/Items\";\nimport Movies from \"../components/Movies\";\nimport Books from \"../components/Books\";\nimport Games from \"../components/Games\";\n\nconst Home = props => {\n  return (\n    <div>\n      {/* <Items page={parseFloat(props.query.page) || 1} />\n      <Books page={parseFloat(props.query.page) || 1} />\n      <Games page={parseFloat(props.query.page) || 1} /> */}\n      <Link href=\"/movies\">\n        <a>Movies</a>\n      </Link>\n      <Link href=\"/books\">\n        <a>Books</a>\n      </Link>\n      <Link href=\"/games\">\n        <a>Games</a>\n      </Link>{\" \"}\n      <Movies filter=\"all\" page={parseFloat(props.query.page) || 1} />\n    </div>\n  );\n};\nexport default Home;\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"downshift\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"lodash.debounce\");","module.exports = require(\"next/head\");","module.exports = require(\"next/link\");","module.exports = require(\"next/router\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"react-icons/fa\");","module.exports = require(\"react-icons/gi\");","module.exports = require(\"react-icons/go\");","module.exports = require(\"react-icons/io\");","module.exports = require(\"react-icons/md\");","module.exports = require(\"react-icons/ti\");","module.exports = require(\"styled-components\");"],"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;AACA;AAFA;AAKA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;;;;;;;;;;;;AC1QA;AAAA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;AC1BA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}