enum Permission {
  ADMIN
  USER
  ITEMCREATE
  ITEMUPDATE
  ITEMDELETE
  PERMISSIONUPDATE
}

enum MovieGenre {
  UNSELECTED
  ACTION
  ADVENTURE
  ANIMATION
  BIOGRAPHY
  CLASSIC
  COMEDY
  CRIME
  CULT
  DOCUMENTARY
  DRAMA
  FAMILY
  FANTASY
  HISTORY
  HORROR
  INDEPENDENT
  INTERNATIONAL
  MUSIC
  MYSTERY
  NATURE
  ROMANCE
  SCI_FI
  SCIENCE
  SPORTS
  THRILLER
}

enum BookGenre {
  UNSELECTED
  ART
  BIOGRAPHY
  BUSINESS
  CHILDRENS
  CLASSICS
  COMIC
  COOKBOOK
  ECONOMICS
  FANTASY
  HISTORY
  HORROR
  MYSTERY
  MUSIC
  NEW_AGE
  PHILOSOPHY
  POETRY
  MYTHOLOGY
  ROMANCE
  RELIGION
  SCI_FI
  SCIENCE
  SELF_HELP
  THRILLER
  TRAVEL 
  WESTERN
}

enum GameGenre {
  UNSELECTED
  ACTION
  ADVENTURE
  FIGHTING
  BOARD
  CARD
  MMORPG
  PLATFORM
  PUZZLE
  RACING
  RPG
  RTS
  SCI_FI
  SHOOTER
  SIMULATION
  SPORTS
  STEALTH
  STRATEGY
  SURVIVAL
  VR
}

enum GamePlatform {
  UNSELECTED
  PC
  NES
  SNES
  N64
  GAMECUBE
  WII
  SWITCH
  PSX
  PS2
  PS3
  PS4
  XBOX
  XBOX_360
  XBOX_ONE
  DREAMCAST
  MOBILE
  OTHER
 
}

enum NumPlayers {
  UNSELECTED
  SINGLE_PLAYER_OFFLINE
  MULTI_PLAYER_OFFLINE
  SINGLE_PLAYER_ONLINE
  MULTI_PLAYER_ONLINE
}

type User {
  id: ID! @id
  name: String!
  email: String! @unique
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission] @scalarList(strategy: RELATION)
  cart: [CartItem!]!
  toWatch: [ToWatchItem!]!
  seenIt: [SeenItItem!]!
  toRead: [ToReadItem!]!
  readIt: [ReadItItem!]!
  toPlay: [ToPlayItem!]!
  playedIt: [PlayedItItem!]!
}

type Movie {
  id: ID! @id
  title: String!
  description: String!
  director: String
  year: Int!
  genre1: MovieGenre!
  genre2: MovieGenre
  genre3: MovieGenre
  length: Int
  budget: Int
  gross: Int
  imdbURL: String
  image: String
  largeImage: String
  user: User!
}

type Book {
  id: ID! @id
  title: String!
  author: String!
  description: String!
  year: Int!
  genre1: BookGenre!
  genre2: BookGenre
  genre3: BookGenre
  publisher: String
  printLength: Int
  pdfURL: String
  image: String
  largeImage: String
  user: User!
}

type Game {
  id: ID! @id
  title: String!
  developer: String
  description: String!
  year: Int!
  numPlayers: NumPlayers
  genre1: GameGenre!
  genre2: GameGenre
  genre3: GameGenre
  platform1: GamePlatform!
  platform2: GamePlatform
  platform3: GamePlatform
  websiteURL: String
  image: String
  largeImage: String
  user: User!
}

type Item {
  id: ID! @id
  title: String!
  description: String!
  image: String
  largeImage: String
  price: Int!
  user: User!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type CartItem {
  id: ID! @id
  quantity: Int! @default(value: 1)
  item: Item #relationship to Item
  user: User! #relationship to user 
}

type ToWatchItem {
  id: ID! @id
  movie: Movie
  user: User!
}
type SeenItItem {
  id: ID! @id
  movie: Movie
  user: User!
}
type ToReadItem {
  id: ID! @id
  book: Book
  user: User!
}
type ReadItItem {
  id: ID! @id
  book: Book
  user: User!
}
type ToPlayItem {
  id: ID! @id
  game: Game
  user: User!
}
type PlayedItItem {
  id: ID! @id
  game: Game
  user: User!
}

type OrderItem {
  id: ID! @id
  title: String!
  description: String!
  image: String!
  largeImage: String!
  price: Int!
  quantity: Int! @default(value: 1)
  user: User
}

type Order {
  id: ID! @id
  items: [OrderItem!]!
  total: Int!
  user: User!
  charge: String!
  createdAt: DateTime @createdAt
  updatedAt: DateTime @updatedAt
}