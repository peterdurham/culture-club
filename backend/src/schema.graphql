# import * from './generated/prisma.graphql'

type SuccessMessage {
  message: String
}

type Mutation {
  createItem(
    title: String
    description: String
    price: Int
    image: String
    largeImage: String
  ): Item!
  updateItem(id: ID!, title: String, description: String, price: Int): Item!
  deleteItem(id: ID!): Item
  createMovie(
    title: String
    director: String
    year: Int
    description: String
    length: Int
    budget: Int
    genre1: MovieGenre
    genre2: MovieGenre
    genre3: MovieGenre
    gross: Int
    imdbURL: String
    image: String
    largeImage: String
  ): Movie!
  updateMovie(
    id: ID!
    title: String
    year: Int
    director: String
    description: String
    genre1: MovieGenre
    genre2: MovieGenre
    genre3: MovieGenre
    length: Int
    budget: Int
    gross: Int
    imdbURL: String
  ): Movie!
  deleteMovie(id: ID!): Movie
  createBook(
    title: String
    author: String
    year: Int
    description: String
    printLength: Int
    genre1: BookGenre
    genre2: BookGenre
    genre3: BookGenre
    publisher: String
    pdfURL: String
    image: String
    largeImage: String
  ): Book!
  updateBook(
    id: ID!
    title: String
    author: String
    year: Int
    description: String
    printLength: Int
    genre1: BookGenre
    genre2: BookGenre
    genre3: BookGenre
    publisher: String
    pdfURL: String
  ): Book!
  deleteBook(id: ID!): Book
  createGame(
    title: String
    developer: String
    description: String
    year: Int
    numPlayers: NumPlayers
    websiteURL: String
    platform1: GamePlatform
    platform2: GamePlatform
    platform3: GamePlatform
    genre1: GameGenre
    genre2: GameGenre
    genre3: GameGenre
    image: String
    largeImage: String
  ): Game!
  updateGame(
    id: ID!
    title: String
    developer: String
    description: String
    year: Int
    platform1: GamePlatform
    platform2: GamePlatform
    platform3: GamePlatform
    numPlayers: NumPlayers
    websiteURL: String
    genre1: GameGenre
    genre2: GameGenre
    genre3: GameGenre
  ): Game!
  deleteGame(id: ID!): Game
  signup(email: String!, password: String!, name: String!): User!
  signin(email: String!, password: String!): User!
  signout: SuccessMessage
  requestReset(email: String!): SuccessMessage
  resetPassword(
    resetToken: String!
    password: String!
    confirmPassword: String!
  ): User!
  updatePermissions(permissions: [Permission], userId: ID!): User
  addToCart(id: ID!): CartItem
  addToToWatch(id: ID!): ToWatchItem
  addToSeenIt(id: ID!): SeenItItem
  addToToRead(id: ID!): ToReadItem
  addToReadIt(id: ID!): ReadItItem
  addToToPlay(id: ID!): ToPlayItem
  addToPlayedIt(id: ID!): PlayedItItem
  removeFromToWatch(id: ID!): ToWatchItem
  removeFromSeenIt(id: ID!): SeenItItem
  removeFromToRead(id: ID!): ToReadItem
  removeFromReadIt(id: ID!): ReadItItem
  removeFromToPlay(id: ID!): ToPlayItem
  removeFromPlayedIt(id: ID!): PlayedItItem
  removeFromCart(id: ID!): CartItem
  createOrder(token: String!): Order!
}

type Query {
  items(
    where: ItemWhereInput
    orderBy: ItemOrderByInput
    skip: Int
    first: Int
  ): [Item]!
  item(where: ItemWhereUniqueInput!): Item
  itemsConnection(where: ItemWhereInput): ItemConnection!
  movies(
    where: MovieWhereInput
    orderBy: MovieOrderByInput
    skip: Int
    first: Int
  ): [Movie]!
  movie(where: MovieWhereUniqueInput!): Movie
  moviesConnection(where: MovieWhereInput): MovieConnection!
  books(
    where: BookWhereInput
    orderBy: BookOrderByInput
    skip: Int
    first: Int
  ): [Book]!
  book(where: BookWhereUniqueInput!): Book
  booksConnection(where: BookWhereInput): BookConnection!
  games(
    where: GameWhereInput
    orderBy: GameOrderByInput
    skip: Int
    first: Int
  ): [Game]!
  game(where: GameWhereUniqueInput!): Game
  gamesConnection(where: GameWhereInput): GameConnection!
  me: User
  users: [User]!
  order(id: ID!): Order
  orders(orderBy: OrderOrderByInput): [Order]!
}

type User {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]!
  cart: [CartItem!]!
  toWatch: [ToWatchItem!]!
  seenIt: [SeenItItem!]!
  toRead: [ToReadItem!]!
  readIt: [ReadItItem!]!
  toPlay: [ToPlayItem!]!
  playedIt: [PlayedItItem!]!
}
